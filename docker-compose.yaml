services:
    backend:
        container_name: backend
        build: backend
        restart: always
        ports:
            - 5000:5000
        volumes:
            - ~/.m2:/root/.m2
        env_file:
            - .env
        networks:
            - react-spring
            - spring-mysql

    db:
        container_name: db
        image: mysql:latest
        env_file:
            - .env
        restart: always
        ports:
            - 3306:3306
        volumes:
            - ./db/final_project_db.sql:/docker-entrypoint-initdb.d/init.sql
            - ./db/mock_data:/var/lib/mysql-files/
        networks:
            - spring-mysql

    adminer:
        container_name: adminer
        image: adminer
        restart: always
        ports:
            - 8080:8080
        networks:
            - spring-mysql

    frontend:
        container_name: frontend
        build:
            context: frontend
            target: development
        ports:
            - 3000:80
        volumes:
            - ./frontend/src:/code/src
            - ./frontend/public:/code/public
        networks:
            - react-spring
        depends_on:
            - backend

volumes:
    db:
        driver: local

networks:
    react-spring: {}
    spring-mysql: {}
